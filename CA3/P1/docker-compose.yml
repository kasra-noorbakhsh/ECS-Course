networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

services:

  # Redis for vote app
  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "votes"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

  worker:
    build: ./voting app/worker
    container_name: worker
    depends_on:
      - redis
      - postgres
    networks:
      - backend

  vote:
    build:
      context: ./voting app/vote
      args:
        OPTION_A: ${OPTION_A}
        OPTION_B: ${OPTION_B}
    container_name: vote
    expose:
      - "5000"
    depends_on:
      - redis
    networks:
      - backend

  result:
    build: ./voting app/result
    container_name: result
    environment:
      - PORT=5001
    expose:
      - "5001"
    depends_on:
      - postgres
    networks:
      - backend

  # 2048 Game Service
  boy:
    build: ./Bazi 2048
    container_name: 2048-game
    networks:
      - backend

  # Go Happy Birthday Page
  girl:
    build: ./BIBI Tavallod
    container_name: happy-birthday
    networks:
      - backend

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-auth/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - vote
      - result
      - boy
      - girl
    networks:
      - frontend
      - backend

volumes:
  db-data: